[build-system]
    build-backend = "poetry.core.masonry.api"
    requires      = ["poetry-core>=2.1.1"]


[tool.poetry]
    authors     = ["Joseph O'Leary <oleary.joseph@outlook.com>"]
    description = ""
    include     = ["src/galaxybox/configs/*.yaml"]
    name        = "galaxybox"
    readme      = "README.md"
    version     = "1.0.0"

[tool.poetry.dependencies]
    astropy    = "^5.3.4"
    h5py       = "^3.10.0"
    halotools  = "^0.9.3"
    matplotlib = "^3.8.1"
    numpy      = "^1.26.1"
    pandas     = "^2.1.3"
    pyarrow    = "^14.0.1"
    python     = "^3.11"
    pyyaml     = "^6.0.1"
    scipy      = "^1.11.3"
    seaborn    = "^0.13.0"
    shapely    = "^2.0.2"
    tables     = "^3.9.1"
    tqdm       = "^4.66.1"

[tool.poetry.group.dev.dependencies]
    commitizen = "^3.24.0"
    jupyter    = "^1.0.0"
    pre-commit = "^3.7.0"
    pytest     = "^8.2.2"
    pytest-cov = "^5.0.0"
    ruff       = "^0.11.2"

[tool.ruff]
    line-length = 100
    src         = ['src/']

[tool.ruff.lint]
    ignore = ["D107"]
    select = ["D", "E", "F", "I", "N", "W291", "W292", "W293"]

[tool.ruff.lint.per-file-ignores]
    "__init__.py" = ["D104", "E402"]

[tool.ruff.format]
    docstring-code-format      = true
    docstring-code-line-length = "dynamic"
    indent-style               = "space"
    line-ending                = "auto"
    quote-style                = "double"
    skip-magic-trailing-comma  = false


[tool.commitizen]
    bump_map                 = { "release" = "MAJOR", "break" = "MAJOR", "feat" = "MINOR", "fix" = "PATCH", "refactor" = "PATCH", "docs" = "PATCH" }
    bump_message             = 'bump: $current_version \u2192 $new_version'
    bump_pattern             = "^.*?(release|break|feat|fix|refactor|docs):?"
    changelog_pattern        = "^(release|break|feat|fix|refactor|docs)?(!)?"
    commit_parser            = "^.*?(?P<change_type>release|break|feat|fix|refactor|docs):\\s(?P<message>.*)?"
    name                     = "cz_customize"
    update_changelog_on_bump = true
    version_files            = ["pyproject.toml:^version"]
    version_provider         = "poetry"

[tool.coverage.run]
    branch = true

[tool.coverage.report]
    # Regexes for lines to exclude from consideration
    exclude_also = [
        # Don't complain about missing debug-only code:
        "def __repr__",
        "if self\\.debug",

        # Don't complain if tests don't hit defensive assertion code:
        "raise AssertionError",
        "raise NotImplementedError",

        # Don't complain if non-runnable code isn't run:
        "if 0:",
        "if __name__ == .__main__.:",

        # Don't complain about abstract methods, they aren't run:
        "@(abc\\.)?abstractmethod",
    ]

    ignore_errors = true

[tool.coverage.html]
    directory = "coverage_html_report"
