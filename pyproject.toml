[project]
name = "galaxybox"
version = "2.0.3"
description = "Add your description here"
readme = "README.md"
authors = [
    { name = "Joseph O'Leary", email = "oleary.joseph@outlook.com" }
]
requires-python = ">=3.11"
dependencies = [
    "astropy>=7.1.0",
    "h5py>=3.14.0",
    "halotools>=0.9.3",
    "matplotlib>=3.10.3",
    "numpy>=2.3.0",
    "pandas[parquet]>=2.3.0",
    "pyyaml>=6.0.2",
    "scipy>=1.15.3",
    "seaborn>=0.13.2",
    "shapely>=2.1.1",
    "tables>=3.10.2",
    "tqdm>=4.67.1",
]

[dependency-groups]
dev = [
    "commitizen>=4.8.2",
    "jupyter>=1.1.1",
    "pre-commit>=4.2.0",
    "pytest>=8.4.0",
    "pytest-cov>=6.1.1",
    "ruff>=0.11.13",
    "twine>=5.0.0",
    "ty>=0.0.1a19",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
    line-length = 100
    src         = ['src/']

[tool.ruff.lint]
    ignore = ["D107"]
    select = ["D", "E", "F", "I", "N", "W291", "W292", "W293"]

[tool.ruff.lint.per-file-ignores]
    "__init__.py" = ["D104", "E402"]
    "tests/*"     = ["D103"]

[tool.ruff.format]
    docstring-code-format      = true
    docstring-code-line-length = "dynamic"
    indent-style               = "space"
    line-ending                = "auto"
    quote-style                = "double"
    skip-magic-trailing-comma  = false


[tool.commitizen]
    bump_message             = 'bump: $current_version â†’ $new_version'
    major_version_zero       = false
    name                     = "cz_conventional_commits"
    update_changelog_on_bump = true
    version_files            = ["pyproject.toml:^version"]
    version_provider         = "uv"
    tag_format               = "v$version"

[tool.coverage.run]
    branch = true
    omit = [
        "tests/*",
        "*/__init__.py"
    ]

[tool.coverage.report]
    # Regexes for lines to exclude from consideration
    exclude_also = [
        # Don't complain about missing debug-only code:
        "def __repr__",
        "if self\\.debug",

        # Don't complain if tests don't hit defensive assertion code:
        "raise AssertionError",
        "raise NotImplementedError",

        # Don't complain if non-runnable code isn't run:
        "if 0:",
        "if __name__ == .__main__.:",

        # Don't complain about abstract methods, they aren't run:
        "@(abc\\.)?abstractmethod",
    ]

    ignore_errors = true

[tool.coverage.html]
    directory = "coverage_html_report"
